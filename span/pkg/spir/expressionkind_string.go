// Code generated by "stringer -type=ExpressionKind"; DO NOT EDIT.

package spir

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXPR_VALUE-1]
	_ = x[EXPR_BINARY_ADD-2]
	_ = x[EXPR_BINARY_SUB-3]
	_ = x[EXPR_BINARY_MUL-4]
	_ = x[EXPR_BINARY_DIV-5]
	_ = x[EXPR_BINARY_MOD-6]
	_ = x[EXPR_BINARY_AND-7]
	_ = x[EXPR_BINARY_OR-8]
	_ = x[EXPR_BINARY_XOR-9]
	_ = x[EXPR_BINARY_SHL-10]
	_ = x[EXPR_BINARY_SHR-11]
	_ = x[EXPR_BINARY_SHRL-12]
	_ = x[EXPR_UNARY_BIT_NOT-13]
	_ = x[EXPR_UNARY_SUB-14]
	_ = x[EXPR_UNARY_NOT-15]
	_ = x[EXPR_DEREF-16]
	_ = x[EXPR_ADDROF-17]
	_ = x[EXPR_SIZEOF-18]
	_ = x[EXPR_ALIGNOF-19]
	_ = x[EXPR_ARRAY_SUBSCRIPT-20]
	_ = x[EXPR_MEMBER_ACCESS-21]
	_ = x[EXPR_MEMBER_PTR_ACCESS-22]
	_ = x[EXPR_CALL-23]
	_ = x[EXPR_CALL_COMPLETE-24]
	_ = x[EXPR_CAST-25]
	_ = x[EXPR_COMMA-26]
	_ = x[EXPR_OTHER_1-27]
	_ = x[EXPR_OTHER_2-28]
	_ = x[EXPR_OTHER_3-29]
	_ = x[EXPR_OTHER_4-30]
	_ = x[EXPR_OTHER_5-31]
}

const _ExpressionKind_name = "EXPR_VALUEEXPR_BINARY_ADDEXPR_BINARY_SUBEXPR_BINARY_MULEXPR_BINARY_DIVEXPR_BINARY_MODEXPR_BINARY_ANDEXPR_BINARY_OREXPR_BINARY_XOREXPR_BINARY_SHLEXPR_BINARY_SHREXPR_BINARY_SHRLEXPR_UNARY_BIT_NOTEXPR_UNARY_SUBEXPR_UNARY_NOTEXPR_DEREFEXPR_ADDROFEXPR_SIZEOFEXPR_ALIGNOFEXPR_ARRAY_SUBSCRIPTEXPR_MEMBER_ACCESSEXPR_MEMBER_PTR_ACCESSEXPR_CALLEXPR_CALL_COMPLETEEXPR_CASTEXPR_COMMAEXPR_OTHER_1EXPR_OTHER_2EXPR_OTHER_3EXPR_OTHER_4EXPR_OTHER_5"

var _ExpressionKind_index = [...]uint16{0, 10, 25, 40, 55, 70, 85, 100, 114, 129, 144, 159, 175, 193, 207, 221, 231, 242, 253, 265, 285, 303, 325, 334, 352, 361, 371, 383, 395, 407, 419, 431}

func (i ExpressionKind) String() string {
	i -= 1
	if i < 0 || i >= ExpressionKind(len(_ExpressionKind_index)-1) {
		return "ExpressionKind(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExpressionKind_name[_ExpressionKind_index[i]:_ExpressionKind_index[i+1]]
}

// Code generated by "stringer -type=ExpressionKind"; DO NOT EDIT.

package spir

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXPR_VALUE-0]
	_ = x[EXPR_BINARY_ADD-1]
	_ = x[EXPR_BINARY_SUB-2]
	_ = x[EXPR_BINARY_MUL-3]
	_ = x[EXPR_BINARY_DIV-4]
	_ = x[EXPR_BINARY_MOD-5]
	_ = x[EXPR_BINARY_AND-6]
	_ = x[EXPR_BINARY_OR-7]
	_ = x[EXPR_BINARY_XOR-8]
	_ = x[EXPR_BINARY_SHL-9]
	_ = x[EXPR_BINARY_SHR-10]
	_ = x[EXPR_BINARY_SHRL-11]
	_ = x[EXPR_UNARY_BIT_NOT-12]
	_ = x[EXPR_UNARY_SUB-13]
	_ = x[EXPR_UNARY_NOT-14]
	_ = x[EXPR_DEREF-15]
	_ = x[EXPR_ADDROF-16]
	_ = x[EXPR_ARRAY_SUBSCRIPT-17]
	_ = x[EXPR_MEMBER_ACCESS-18]
	_ = x[EXPR_MEMBER_PTR_ACCESS-19]
	_ = x[EXPR_CALL-20]
	_ = x[EXPR_CALL_COMPLETE-21]
	_ = x[EXPR_CAST-22]
	_ = x[EXPR_COMMA-23]
	_ = x[EXPR_SIZEOF-24]
	_ = x[EXPR_ALIGNOF-25]
	_ = x[EXPR_GOTO-26]
	_ = x[EXPR_LABEL-27]
	_ = x[EXPR_APPLE-28]
	_ = x[EXPR_BANANA-29]
	_ = x[EXPR_PINEAPPLE-30]
	_ = x[EXPR_OTHER-31]
}

const _ExpressionKind_name = "EXPR_VALUEEXPR_BINARY_ADDEXPR_BINARY_SUBEXPR_BINARY_MULEXPR_BINARY_DIVEXPR_BINARY_MODEXPR_BINARY_ANDEXPR_BINARY_OREXPR_BINARY_XOREXPR_BINARY_SHLEXPR_BINARY_SHREXPR_BINARY_SHRLEXPR_UNARY_BIT_NOTEXPR_UNARY_SUBEXPR_UNARY_NOTEXPR_DEREFEXPR_ADDROFEXPR_ARRAY_SUBSCRIPTEXPR_MEMBER_ACCESSEXPR_MEMBER_PTR_ACCESSEXPR_CALLEXPR_CALL_COMPLETEEXPR_CASTEXPR_COMMAEXPR_SIZEOFEXPR_ALIGNOFEXPR_GOTOEXPR_LABELEXPR_APPLEEXPR_BANANAEXPR_PINEAPPLEEXPR_OTHER"

var _ExpressionKind_index = [...]uint16{0, 10, 25, 40, 55, 70, 85, 100, 114, 129, 144, 159, 175, 193, 207, 221, 231, 242, 262, 280, 302, 311, 329, 338, 348, 359, 371, 380, 390, 400, 411, 425, 435}

func (i ExpressionKind) String() string {
	if i < 0 || i >= ExpressionKind(len(_ExpressionKind_index)-1) {
		return "ExpressionKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ExpressionKind_name[_ExpressionKind_index[i]:_ExpressionKind_index[i+1]]
}
